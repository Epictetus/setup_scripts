#!/bin/bash

#################################################
# Installer script for Gitorious
#
# This script was tested with Ubuntu 10.04 TLS.
#
# required:
#  Git
#  RubyOnRails
#  Passenger
#  MySQL
#
# Author  : Takahiro Fujiwara ( tfmagician )
# Created : 2010-12-04
# Updated : 2010-12-05
#################################################

# Check executable user.
if [ "`whoami`" != "root" ]; then
echo "You need to be root to run this!"
  exit 2
fi

# Get some settings.
while [ -z $DOMAIN ]; do
  echo -n 'Enter your domain you want to use for Gitorious service. > '
  read DOMAIN
done

while [ -z $DB_USER ]; do
  echo -n 'Enter user name for database for Gitorious. > '
  read DB_USER
done

while [ -z $DB_PASSWD ]; do
  echo -n 'Enter password for database for Gitorious. > '
  read DB_PASSWD
done

while [ -z $ADMIN_MAIL ]; do
  echo -n 'Enter your mail address for Gitorious admin. > '
  read ADMIN_MAIL
done

##
echo 'Get Ultrasphinx running'
su gitorious -c "cd /var/www/${DOMAIN}/gitorious && rake ultrasphinx:bootstrap RAILS_ENV=production"

##
echo 'Setup Permissons Right'
cd /var/www/${DOMAIN}/gitorious
chown -R git:gitorious config/environment.rb script/poller log tmp
chmod -R g+w config/environment.rb script/poller log tmp
chmod ug+x script/poller

##
echo 'Setup Ultrasphinx indexing cronjob'
su gitorious -c "echo \"* */1 * * * cd /var/www/${DOMAIN}/gitorious && rake ultrasphinx:index RAILS_ENV=production\" | crontab"

##
echo 'Setup logrotate'
cd /var/www/${DOMAIN}/gitorious
cp doc/templates/ubuntu/gitorious-logrotate /etc/logrotate.d/gitorious
chmod +x /etc/logrotate.d/gitorious
cat > /etc/logrotate.d/gitorious <<CONF
/var/www/${DOMAIN}/gitorious/log/*log {
    missingok
    notifempty
    sharedscripts
    postrotate
        /etc/init.d/git-daemon restart > /dev/null 2>/dev/null || true
        /etc/init.d/git-ultrasphinx restart > /dev/null 2>/dev/null || true
        /bin/touch /var/www/${DOMAIN}/gitorious/tmp/restart.txt > /dev/null 2>/dev/null || true
    endscript
}
CONF

##
echo 'Create virtual host setting'
cat > /var/www/${DOMAIN}/conf/vhost.conf <<CONF
<VirtualHost *:80>
    <Directory /var/www/${DOMAIN}/gitorious/public>
        Options FollowSymLinks
        AllowOverride None
        Order allow,deny
        Allow from All
    </Directory>

    DocumentRoot /var/www/${DOMAIN}/gitorious/public
    ServerName ${DOMAIN}

    ErrorLog /var/www/${DOMAIN}/log/error.log
    CustomLog /var/www/${DOMAIN}/log/access.log combined

    # Gzip/Deflate
    # http://fluxura.com/2006/5/19/apache-for-static-and-mongrel-for-rails-with-mod_deflate-and-capistrano-support
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/javascript text/css application/x-javascript
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html

    # Far future expires date
    <FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf)$">
        ExpiresActive On
        ExpiresDefault "access plus 1 year"
    </FilesMatch>

    # No Etags
    FileETag None

    RewriteEngine On

    # Check for maintenance file and redirect all requests
    RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^.*$ /system/maintenance.html [L]
</VirtualHost>
CONF

ln -s /var/www/${DOMAIN}/conf/vhost.conf /etc/apache2/sites-available/${DOMAIN}
a2ensite ${DOMAIN}

##
echo 'Run Gitorious processes'
cat <<MSG
 Now, run all the services:

 sudo /etc/init.d/activemq start
 sudo env RAILS_ENV=production /etc/init.d/git-daemon start
 su git -c \
   "cd /var/www/${DOMAIN}/gitorious && \
       env RAILS_ENV=production script/poller run"
  Later, you can use script/poller start to run the poller in the background.
  For debugging, it's better to be able to follow the output.
  The gitorious script runs with the production environment as default, so we'll start the application in production mode.
MSG
